filter {
   grok {
       match => { "message" =>"(?<datetime>\d\d\d\d/\d\d/\d\d \d\d:\d\d:\d\d)\[(?<errtype>\w+)\] \S+: \*\d+ (?<errmsg>[^,]+), (?<errinfo>.*)$" }
}
mutate {
    rename => ["host", "fromhost"]
    gsub => ["errmsg", "too large body: \d+ bytes", "too large body"]
}
if [errinfo]
{
    ruby {
       code => "
           new_event = Log-Stash:: Event. new (Hash[event.get ('errinfo') .
               split(', ').map{|l| l.split(': ')}])
           new_event.remove('@time stamp')
           event.append(new_event)""
       "
    }
}
grok {
   match => { "request" => "'%{WORD:verb} %{URIPATH:urlpath}(?:\?%{NGX_URIPARAM:urlparam})?(?: HTTP/%{NUMBER:httpversion})"' }
   patterns_dir =>["/etc/logstash/patterns")
   remove field => [ "message", "errinfo", "request" ]
}
}